{"version":3,"file":"static/js/app.worker.08e8915f.js","mappings":"mBAGA,MAcA,EAd2BA,IACvB,MAAMC,EAAiC,CAAC,EAUxC,OARAD,EAAOE,SAAQC,IACX,MAAM,KAACC,EAAI,GAAEC,GAAMF,EAEdF,EAAcG,KAAOH,EAAcG,GAAQ,CAAC,GAEjDH,EAAcG,GAAQ,IAAIH,EAAcG,GAAO,CAACC,GAAKF,EAAM,IAGxDF,CAAa,ECTxB,EALuB,CACnBK,qBAAsB,uBACtBC,eAAgB,kBCFL,MAAMC,EACjB,YAAOC,GACH,OAAQC,KAAKC,UACjB,CAEA,aAAOC,GACH,YAAsCC,IAA/BC,CAAAA,SAAAA,aAAAA,WAAAA,YAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,gCAAAA,WAAAA,iCAAAA,2BAAYC,cACvB,CAEA,eAAeJ,GACX,MAAoC,WAA7BK,OAAOC,SAASC,QAC3B,ECTW,MAAMC,EACjB,UAAOC,GAA2B,IAAD,IAAAC,EAAAC,UAAAC,OAAnBC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GACdP,EAAOQ,aAAaC,QAAQR,OAAQI,EACxC,CAEA,WAAOK,GAA4B,IAAD,IAAAC,EAAAR,UAAAC,OAAnBC,EAAI,IAAAC,MAAAK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJP,EAAIO,GAAAT,UAAAS,GACfZ,EAAOQ,aAAaC,QAAQC,QAASL,EACzC,CAEA,YAAOQ,GAA6B,IAAD,IAAAC,EAAAX,UAAAC,OAAnBC,EAAI,IAAAC,MAAAQ,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJV,EAAIU,GAAAZ,UAAAY,GAChBf,EAAOQ,aAAaC,QAAQI,SAAUR,EAC1C,CAEA,mBAAeG,CAAaQ,GAA8D,IAAD,IAAAC,EAAAd,UAAAC,OAAnBC,EAAI,IAAAC,MAAAW,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJb,EAAIa,EAAA,GAAAf,UAAAe,GAClE7B,EAAKC,UAAYD,EAAKI,UACtBuB,KAAeX,EAEvB,ECdJc,KAAKC,UAAY,SAAUC,GACvB,MAAMC,EAAOD,EAAMC,KAEnB,GAAQA,EAAKC,OACJC,EAAerC,qBAApB,CACI,MAAM,OAACN,GAAUyC,EAAKG,QACtBN,KAAKO,YAAY,CAACH,KAAMC,EAAepC,eAAgBqC,QAASE,EAAkB9C,IAC7E,MAELmB,EAAOU,KAAK,wBAAyBY,EAAKC,KAGtD,C","sources":["services/groupMoviesByYear/groupMoviesByYear.ts","config/workerMessages.ts","utils/Mode.ts","utils/Logger.ts","app.worker.ts"],"sourcesContent":["import MovieCollection from \"../../models/movieCollection/MovieCollection\";\nimport Movie from \"../../models/movie/Movie\";\n\nconst groupMoviesByYear = (movies: Movie[]): MovieCollection => {\n    const groupedMovies: MovieCollection = {};\n\n    movies.forEach(movie => {\n        const {year, id} = movie;\n\n        if (!groupedMovies[year]) groupedMovies[year] = {};\n\n        groupedMovies[year] = {...groupedMovies[year], [id]: movie};\n    });\n\n    return groupedMovies;\n};\n\nexport default groupMoviesByYear;\n","const WorkerMessages = {\n    GROUP_MOVIES_BY_YEAR: 'GROUP_MOVIES_BY_YEAR',\n    GROUPED_MOVIES: 'GROUPED_MOVIES'\n};\n\nexport default WorkerMessages;","export default class Mode {\n    static isDev(): boolean {\n        return !this._isHttps();\n    }\n\n    static isTest(): boolean {\n        return process.env.JEST_WORKER_ID !== undefined;\n    }\n\n    private static _isHttps(): boolean {\n        return window.location.protocol === \"https:\";\n    }\n}","import Mode from \"./Mode\";\n\nexport default class Logger {\n    static log(...args: any[]): void {\n        Logger.logWithLevel(console.log, ...args);\n    }\n\n    static warn(...args: any[]): void {\n        Logger.logWithLevel(console.warn, ...args);\n    }\n\n    static error(...args: any[]): void {\n        Logger.logWithLevel(console.error, ...args);\n    }\n\n    private static logWithLevel(logFunction: (...args: any[]) => void, ...args: any[]): void {\n        if (Mode.isDev() && !Mode.isTest()) {\n            logFunction(...args);\n        }\n    }\n}\n","import groupMoviesByYear from \"./services/groupMoviesByYear/groupMoviesByYear\";\nimport WorkerMessages from \"./config/workerMessages\";\nimport Logger from \"./utils/Logger\";\n\n/* eslint-disable no-restricted-globals */\nself.onmessage = function (event) {\n    const data = event.data;\n\n    switch (data.type) {\n        case WorkerMessages.GROUP_MOVIES_BY_YEAR:\n            const {movies} = data.payload;\n            self.postMessage({type: WorkerMessages.GROUPED_MOVIES, payload: groupMoviesByYear(movies)});\n            break;\n        default:\n            Logger.warn('Unknown message type:', data.type);\n            break;\n    }\n};\n\nexport default Worker as typeof Worker & { new(): Worker };\n"],"names":["movies","groupedMovies","forEach","movie","year","id","GROUP_MOVIES_BY_YEAR","GROUPED_MOVIES","Mode","isDev","this","_isHttps","isTest","undefined","process","JEST_WORKER_ID","window","location","protocol","Logger","log","_len","arguments","length","args","Array","_key","logWithLevel","console","warn","_len2","_key2","error","_len3","_key3","logFunction","_len4","_key4","self","onmessage","event","data","type","WorkerMessages","payload","postMessage","groupMoviesByYear"],"sourceRoot":""}